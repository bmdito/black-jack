{"version":3,"sources":["assets/images/ace-of-spades.jpg","assets/images/card-back.png","assets/images/pokerchips.png","components/Landing/landing.js","utils/API.js","components/Register/index.js","components/LoginModal/ModalContext.js","components/LoginModal/ModalRoot.js","components/Login/Login.js","components/Logout/Logout.js","components/Navbar/Navbar.js","components/Withdrawal/index.js","components/Table/index.js","components/Profile/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","className","Component","userRegister","data","axios","post","userLogin","checkAvailChips","get","updatedChips","Register","state","name","email","password","password2","nameError","emailError","passwordError","failedError","validate","nameErr","emailErr","passErr","includes","length","setState","handleInputChange","event","value","target","handleSubmit","preventDefault","console","log","API","toLowerCase","then","res","localStorage","setItem","token","window","location","href","alert","catch","err","src","spades","this","type","placeholder","onChange","onClick","ModalContext","createContext","component","props","showModal","hideModal","ModalProvider","Provider","children","ModalConsumer","Consumer","ModalRoot","onRequestClose","Login","Logout","handleLogout","removeItem","Modal1","otherProps","isOpen","Modal2","foo","checkAuth","getItem","decode","exp","Date","now","Navbar","id","to","color","Withdrawal","userInfo","withdrawal","error","checkChips","filter","dat","_id","final","theName","diff","chips","reload","withdrawalError","decoded","user","undefined","widModal","Table","theDeck","currentShuffle","dealerHand","playerHand","firstHandDealer","secondPlayerHand","dealerPoints","playerPoints","secPlayerPoints","secHandStand","currentBet","currentPlayerName","chipsAfterWithdrawal","chipStack","betInPlay","hideBetDiv","showSplit","splitSelected","firstDeal","dealerTurn","dealerStand","isSit","isDealt","showStandUp","maxBet","inPlay","adjusted","deal","takeSeat","buyIn","sitName","remaining","shuffle","sample","shuffled","current","Math","floor","random","indexOf","push","playerDealt","dealerDealt","firstDealer","cards","updated","slice","setTimeout","scoreCheck","hitOption","splitCheck","sampDealerHand","sampPlayerHand","currentDealer","currentPlayer","currentPlayerTwo","dealerAceCount","playerAceCount","playerAceCountTwo","i","val","parseInt","sampPlayerHandTwo","roundOver","playerHit","splitCurrent","dealerHit","dealerStayed","playerStand","newDealer","secPlayerStand","playerDouble","doubled","playerSplit","first","second","pop","updatedBet","standUpFromTable","finalChips","playerWin","playerTwo","dealer","selected","resetGame","playerLose","playerPush","makeDeck","generatedDeck","card","suit","values","suits","j","toggleSit","visibility","nameTag","toggleBuy","betDivStyle","splitButtStyle","splitDivStyle","secButtHide","hitButtonAvail","standUpStyle","thatHiddenCard","map","key","style","hiddenCard","Button","bsclass","onSubmit","Card","combo","Profile","profileInfo","getUserInfo","Container","Row","Col","md","span","offset","avatar","AuthRoute","rest","render","pathname","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be2942b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ace-of-spades.255639e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/card-back.8698b6a0.png\";","module.exports = __webpack_public_path__ + \"static/media/pokerchips.403d595c.png\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"background-img\">\n          <div className=\"landing-main\">\n            <h1 className=\"title-head\">Welcome to Hot Aces!</h1>\n            <p className=\"landing-text\">\n              You've found the hottest BlackJack game on the interwebs!\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Landing;\n","import axios from \"axios\";\n\nexport default {\n  userRegister: function(data) {\n    return axios.post(\"/api/users\", data);\n  },\n\n  userLogin: function(data) {\n    return axios.post(\"/api/auth\", data);\n  },\n\n  checkAvailChips: function(data) {\n    return axios.get(\"/api/availchips\", data);\n  },\n\n  updatedChips: function(data) {\n    return axios.post(\"/api/updatedChips\", data);\n  }\n};\n","import React, { Component, Fragment } from \"react\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\nimport spades from \"../../assets/images/ace-of-spades.jpg\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    nameError: \"\",\n    emailError: \"\",\n    passwordError: \"\",\n    failedError: \"\"\n  };\n\n  validate = () => {\n    let nameErr = \"\";\n    let emailErr = \"\";\n    let passErr = \"\";\n\n    if (!this.state.email.includes(\"@\")) {\n      emailErr = \"Please choose a valid email!\";\n    }\n\n    if (!this.state.email.includes(\".com\")) {\n      emailErr = \"Please choose a valid email\";\n    }\n\n    if (this.state.name.length < 1) {\n      nameErr = \"Please choose a Name\";\n    }\n\n    if (this.state.password.length < 6) {\n      passErr = \"Passwords must be at least 6 characters\";\n    }\n\n    if (emailErr || passErr || nameErr) {\n      this.setState({\n        emailError: emailErr,\n        passwordError: passErr,\n        nameError: nameErr\n      });\n      return false;\n    }\n    return true;\n  };\n\n  handleInputChange = event => {\n    let value = event.target.value;\n    let name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"you submitted\");\n    let isValid = this.validate();\n    if (isValid) {\n      API.userRegister({\n        name: this.state.name,\n        email: this.state.email.toLowerCase(),\n        password: this.state.password\n      })\n        .then(res => {\n          console.log(res);\n          API.userLogin({\n            email: this.state.email,\n            password: this.state.password\n          })\n            .then(res => {\n              localStorage.setItem(\"x-auth-token\", res.data.token);\n              window.location.href = \"/\";\n              alert(\"Register success!\");\n            })\n            .catch(err => console.log(err));\n        })\n        .catch(err => console.log(err));\n    } else {\n      let failedError = \"Registration Failed!\";\n\n      this.setState({\n        failedError\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <img className=\"spade-logo\" src={spades} />\n\n        <h1>Sign Up</h1>\n        <h3 className=\"indicator\">Create your account</h3>\n        <form className=\"form\">\n          <div className=\"form-group\">\n            <div className=\"error-style\">{this.state.nameError}</div>\n            <input\n              type=\"text\"\n              placeholder=\"name\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"error-style\">{this.state.emailError}</div>\n            <input\n              type=\"text\"\n              placeholder=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"error-style\">{this.state.passwordError}</div>\n            <input\n              type=\"text\"\n              placeholder=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"confirm password\"\n              name=\"password2\"\n              value={this.state.password2}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <button className=\"subButt\" onClick={this.handleSubmit}>\n            Submit\n          </button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component, createContext } from \"react\";\n\nconst ModalContext = createContext({\n  component: null,\n  props: {},\n  showModal: () => {},\n  hideModal: () => {}\n});\n\nexport class ModalProvider extends Component {\n  showModal = (component, props = {}) => {\n    this.setState({\n      component,\n      props\n    });\n  };\n\n  hideModal = () =>\n    this.setState({\n      component: null,\n      props: {}\n    });\n\n  state = {\n    component: null,\n    props: {},\n    showModal: this.showModal,\n    hideModal: this.hideModal\n  };\n\n  render() {\n    return (\n      <ModalContext.Provider value={this.state}>\n        {this.props.children}\n      </ModalContext.Provider>\n    );\n  }\n}\n\nexport const ModalConsumer = ModalContext.Consumer;\n","import React from \"react\";\nimport { ModalConsumer } from \"./ModalContext\";\n\nconst ModalRoot = () => (\n  <ModalConsumer>\n    {({ component: Component, props, hideModal }) =>\n      Component ? <Component {...props} onRequestClose={hideModal} /> : null\n    }\n  </ModalConsumer>\n);\n\nexport default ModalRoot;\n","import React, { Component, Fragment } from \"react\";\nimport \"./style.css\";\nimport API from \"../../utils/API\";\nimport spades from \"../../assets/images/ace-of-spades.jpg\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    emailError: \"\",\n    passwordError: \"\",\n    failedError: \"\"\n  };\n\n  validate = () => {\n    let nameErr = \"\";\n    let emailErr = \"\";\n    let passErr = \"\";\n\n    if (!this.state.email.includes(\"@\")) {\n      emailErr = \"Please choose a valid email!\";\n    }\n\n    if (!this.state.email.includes(\".com\")) {\n      emailErr = \"Please choose a valid email\";\n    }\n\n    if (this.state.password.length < 6) {\n      passErr = \"Passwords must be at least 6 characters\";\n    }\n\n    if (emailErr || passErr || nameErr) {\n      this.setState({\n        emailError: emailErr,\n        passwordError: passErr,\n        nameError: nameErr\n      });\n      return false;\n    }\n    return true;\n  };\n\n  handleInputChange = event => {\n    let value = event.target.value;\n    let name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"you submitted\");\n    let isValid = this.validate();\n    if (isValid) {\n      API.userLogin({\n        email: this.state.email.toLowerCase(),\n        password: this.state.password\n      })\n        .then(res => {\n          localStorage.setItem(\"x-auth-token\", res.data.token);\n          window.location.href = \"/\";\n          alert(\"Login Success!\");\n        })\n        .catch(err => console.log(err));\n    } else {\n      let failedError = \"login Failed!\";\n\n      this.setState({\n        failedError\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <img className=\"spade-logo\" src={spades} />\n        <h1>Sign in</h1>\n        <h3 className=\"indicator\">Log in to your account</h3>\n        <form className=\"form\">\n          <div className=\"form-group\">\n            <div className=\"error-style\">{this.state.emailError}</div>\n            <input\n              type=\"text\"\n              placeholder=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"error-style\">{this.state.passwordError}</div>\n            <input\n              type=\"text\"\n              placeholder=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleInputChange}\n            />\n          </div>\n          <button className=\"subButt\" onClick={this.handleSubmit}>\n            Submit\n          </button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\n\nclass Logout extends Component {\n  handleLogout = event => {\n    localStorage.removeItem(\"x-auth-token\");\n    localStorage.removeItem(\"diff\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"funds\");\n    window.location.href = \"/\";\n  };\n\n  render() {\n    return (\n      <button href=\"/\" className=\"logButt\" onClick={this.handleLogout}>\n        Logout\n      </button>\n    );\n  }\n}\n\nexport default Logout;\n","import React, { Fragment } from \"react\";\nimport { render } from \"react-dom\";\nimport Modal from \"react-modal\";\nimport { ModalProvider, ModalConsumer } from \"../LoginModal/ModalContext\";\nimport ModalRoot from \"../LoginModal/ModalRoot\";\nimport Register from \"../Register/index\";\nimport Login from \"../Login/Login\";\nimport Logout from \"../Logout/Logout\";\nimport decode from \"jwt-decode\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nconst Modal1 = ({ onRequestClose, ...otherProps }) => (\n  <div className=\"modal-wrapper\">\n    <Modal isOpen onRequestClose={onRequestClose} {...otherProps}>\n      {/* <button onClick={onRequestClose}>close</button> */}\n      <Login />\n    </Modal>\n  </div>\n);\n\nconst Modal2 = ({ onRequestClose, foo, ...otherProps }) => (\n  <div className=\"modal-wrapper\">\n    <Modal isOpen onRequestClose={onRequestClose} {...otherProps}>\n      {/* <button onClick={onRequestClose}>close</button> */}\n      <Register />\n    </Modal>\n  </div>\n);\n\nconst checkAuth = () => {\n  const token = localStorage.getItem(\"x-auth-token\");\n  if (!token) {\n    return false;\n  } else {\n    //Get expiration and id of user from token\n    const { exp } = decode(token);\n    if (exp < Date.now() / 1000) {\n      return false;\n    }\n  }\n  return true;\n};\n\nfunction Navbar() {\n  return (\n    <>\n      <div className=\"container-fullwidth\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"#\">\n            <span className=\"brandy\">Hot Aces</span>\n          </a>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            {checkAuth() ? (\n              <>\n                <div className=\"ml-auto\">\n                  <Link to=\"/profile\">\n                    <button className=\"logButt\" color=\"inherit\">\n                      <span className=\"navFont\">My Profile</span>\n                    </button>\n                  </Link>\n                  <Link to=\"/table\">\n                    <button type=\"button\" className=\"logButt\" color=\"inherit\">\n                      <span className=\"navFont\">Join Table</span>\n                    </button>\n                  </Link>\n                </div>\n              </>\n            ) : (\n              <>\n                {/* My Profile  */}\n                <button className=\"logButt navHide\" color=\"inherit\">\n                  <span className=\"navFont\">My Profile</span>\n                </button>\n                {/* Join Table Button */}\n                <button\n                  className=\"logButt navHide\"\n                  href=\"/table\"\n                  color=\"inherit\"\n                >\n                  <span className=\"navFont\">Join Table</span>\n                </button>\n              </>\n            )}\n            {checkAuth() ? (\n              <Logout />\n            ) : (\n              <>\n                <div className=\"ml-auto\">\n                  <ModalProvider>\n                    <ModalRoot />\n                    <ModalConsumer>\n                      {({ showModal }) => (\n                        <Fragment>\n                          <button\n                            className=\"logButt\"\n                            onClick={() => showModal(Modal1)}\n                          >\n                            <span className=\"navFont\">Login</span>\n                          </button>\n                          <button\n                            className=\"logButt\"\n                            onClick={() => showModal(Modal2)}\n                          >\n                            <span className=\"navFont\">Register</span>\n                          </button>\n                        </Fragment>\n                      )}\n                    </ModalConsumer>\n                  </ModalProvider>\n                </div>\n              </>\n            )}\n            {/* <ul className=\"navbar-nav ml-auto\">\n\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/Login\">\n                  Log In\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/Register\">\n                  Register\n                </a>\n              </li>\n            </ul> */}\n          </div>\n        </nav>\n      </div>\n    </>\n  );\n}\n\nexport default Navbar;\n","import React, { Component, Fragment } from \"react\";\n// import API from \"../../utils/API\";\nimport decode from \"jwt-decode\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nclass Withdrawal extends Component {\n  state = {\n    userInfo: null,\n    withdrawal: null,\n    error: \"\"\n  };\n\n  checkChips = id => {\n    console.log(\"check avail chips ran with id: \" + id);\n\n    API.checkAvailChips(id)\n      .then(res => {\n        this.setState({ userInfo: res.data.filter(dat => dat._id === id) });\n        console.log(this.state.userInfo);\n      })\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount() {\n    var token = localStorage.getItem(\"x-auth-token\");\n\n    var decoded = decode(token);\n    console.log(decoded);\n    console.log(decoded.user.id);\n    var id = decoded.user.id;\n\n    this.checkChips(id);\n  }\n\n  handleInputChange = event => {\n    let value = event.target.value;\n    let name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let isValid = this.validate();\n    if (isValid) {\n      console.log(\"you submitted\");\n      let final = this.state.withdrawal;\n      let theName = this.state.userInfo[0].name;\n      let diff = this.state.userInfo[0].chips - final;\n      localStorage.setItem(\"name\", theName);\n      localStorage.setItem(\"funds\", final);\n      localStorage.setItem(\"diff\", diff);\n      window.location.reload();\n    } else {\n    }\n  };\n\n  validate = () => {\n    let withdrawalError = \"\";\n    if (this.state.withdrawal > this.state.userInfo[0].chips) {\n      withdrawalError = \"Withdrawal amount exceeds Funds!!\";\n    }\n\n    if (withdrawalError) {\n      this.setState({\n        error: withdrawalError\n      });\n      return false;\n    }\n    return true;\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <form className=\"form\">\n          <div className=\"form-group\">\n            <h2 className=\"withdraw-title\">Choose Withdrawal Amount</h2>\n            {this.state.userInfo !== null &&\n            this.state.userInfo !== undefined &&\n            this.state.userInfo.length !== 0 ? (\n              <>\n                <h2 className=\"avail-text\">\n                  Available Chips:{\" \"}\n                  <span className=\"chips-style\">\n                    {this.state.userInfo[0].chips}\n                  </span>\n                </h2>\n                <div className=\"error-style\">{this.state.error}</div>\n              </>\n            ) : (\n              <>\n                <h2>Loading</h2>\n              </>\n            )}\n\n            <input\n              type=\"text\"\n              className=\"withdrawal-input\"\n              placeholder=\"Withdrawal Amount\"\n              name=\"withdrawal\"\n              value={this.state.withdrawal}\n              onChange={this.handleInputChange}\n            />\n            <button className=\"withdrawButt\" onClick={this.handleSubmit}>\n              Submit\n            </button>\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nexport default Withdrawal;\n","import React, { Component, Fragment } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport spades from \"../../assets/images/ace-of-spades.jpg\";\nimport hiddenCard from \"../../assets/images/card-back.png\";\nimport chips from \"../../assets/images/pokerchips.png\";\nimport \"./style.css\";\nimport Modal from \"react-modal\";\nimport Withdrawal from \"../Withdrawal/index\";\nimport { ModalProvider, ModalConsumer } from \"../LoginModal/ModalContext\";\nimport ModalRoot from \"../LoginModal/ModalRoot\";\nimport decode from \"jwt-decode\";\nimport API from \"../../utils/API\";\n\nconst widModal = ({ onRequestClose, ...otherProps }) => (\n  <div className=\"modal-wrapper\">\n    <Modal isOpen onRequestClose={onRequestClose} {...otherProps}>\n      {/* <button onClick={onRequestClose}>close</button> */}\n\n      <Withdrawal />\n    </Modal>\n  </div>\n);\n\nclass Table extends Component {\n  state = {\n    theDeck: [],\n    currentShuffle: [],\n    dealerHand: [],\n    playerHand: [],\n    firstHandDealer: [],\n    secondPlayerHand: [],\n    dealerPoints: null,\n    playerPoints: null,\n    secPlayerPoints: null,\n    secHandStand: false,\n    currentBet: undefined,\n    currentPlayerName: \"\",\n    chipsAfterWithdrawal: null,\n    chipStack: null,\n    betInPlay: 0,\n    hideBetDiv: true,\n    showSplit: false,\n    splitSelected: false,\n    firstDeal: true,\n    dealerTurn: false,\n    dealerStand: false,\n    isSit: false,\n    isDealt: false,\n    showStandUp: false\n  };\n\n  componentDidMount() {\n    this.makeDeck();\n  }\n\n  handleInputChange = event => {\n    let value = event.target.value;\n    let name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.chipStack - this.state.currentBet < 0) {\n      alert(\"You dont have enough chips!\");\n    } else if (this.state.currentBet > this.state.maxBet) {\n      alert(\"Bet exceeds max bet!\");\n    } else {\n      // DEAL INITIAL HANDS\n\n      let inPlay = this.state.currentBet;\n      let adjusted = this.state.chipStack - this.state.currentBet;\n      this.setState({\n        chipStack: adjusted,\n        betInPlay: inPlay,\n        hideBetDiv: true\n      });\n      this.deal();\n    }\n  };\n\n  //creates a deck of cards\n  makeDeck() {\n    var generatedDeck = [];\n    function card(suit, val) {\n      this.name = `${val} of ${suit}`;\n      this.suit = suit;\n      this.val = val;\n    }\n\n    const values = [\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"10\",\n      \"J\",\n      \"Q\",\n      \"K\",\n      \"A\"\n    ];\n    const suits = [\"♦\", \"♣\", \"♥\", \"♠\"];\n\n    for (var i = 0; i < values.length; i++) {\n      for (var j = 0; j < suits.length; j++) {\n        generatedDeck.push(new card(suits[j], values[i]));\n      }\n    }\n    console.log(\"...generating deck\");\n\n    this.setState({\n      theDeck: generatedDeck\n    });\n  }\n\n  // activates on sit\n  takeSeat = () => {\n    console.log(\"SAT DOWN\");\n    const buyIn = localStorage.getItem(\"funds\");\n    const sitName = localStorage.getItem(\"name\");\n    const remaining = localStorage.getItem(\"diff\");\n\n    this.setState({\n      hideBetDiv: false,\n      isSit: true,\n      chipStack: buyIn,\n      currentPlayerName: sitName,\n      chipsAfterWithdrawal: remaining\n    });\n    // this.promptBuyin();\n    this.shuffle();\n  };\n\n  //creates randomly shuffled deck\n  shuffle = () => {\n    var sample = this.state.theDeck;\n    var shuffled = [];\n    while (shuffled.length < 52) {\n      var randIndex = Math.floor(Math.random() * 52);\n      var current = sample[randIndex];\n      if (shuffled.indexOf(current) < 0) {\n        shuffled.push(current);\n      }\n    }\n    this.setState({\n      currentShuffle: sample\n    });\n    // console.log(shuffled);\n  };\n\n  //Initial Deal\n  deal = () => {\n    console.log(\"you clicked deal!\");\n    console.log(\"... dealing cards\");\n    var playerDealt = [];\n    var dealerDealt = [];\n    var firstDealer = [];\n    var cards = this.state.currentShuffle;\n    playerDealt.push(cards[0], cards[2]);\n    dealerDealt.push(cards[1]);\n    firstDealer.push(cards[3]);\n    var updated = cards.slice(4);\n\n    this.setState({\n      playerHand: playerDealt,\n      dealerHand: dealerDealt,\n      firstHandDealer: firstDealer,\n      currentShuffle: updated,\n      showStandUp: false,\n      isDealt: true\n    });\n\n    setTimeout(() => {\n      this.scoreCheck();\n    }, 1000);\n\n    this.hitOption();\n  };\n\n  hitOption = () => {\n    setTimeout(() => {\n      this.setState({\n        firstDeal: false\n      });\n    }, 2000);\n  };\n\n  //checkScore\n  scoreCheck = () => {\n    this.splitCheck();\n    let sampDealerHand = [...this.state.dealerHand];\n    console.log(sampDealerHand);\n    let sampPlayerHand = [...this.state.playerHand];\n\n    let currentDealer = 0;\n    var currentPlayer = 0;\n    var currentPlayerTwo = 0;\n    var dealerAceCount = 0;\n    var playerAceCount = 0;\n    var playerAceCountTwo = 0;\n\n    for (var i = 0; i < sampDealerHand.length; i++) {\n      if (\n        sampDealerHand[i].val === \"J\" ||\n        sampDealerHand[i].val === \"Q\" ||\n        sampDealerHand[i].val === \"K\"\n      ) {\n        currentDealer += 10;\n      } else if (sampDealerHand[i].val === \"A\") {\n        currentDealer += 11;\n        dealerAceCount++;\n      } else {\n        currentDealer += parseInt(sampDealerHand[i].val);\n      }\n    }\n\n    for (var i = 0; i < sampPlayerHand.length; i++) {\n      if (\n        sampPlayerHand[i].val === \"J\" ||\n        sampPlayerHand[i].val === \"Q\" ||\n        sampPlayerHand[i].val === \"K\"\n      ) {\n        currentPlayer += 10;\n      } else if (sampPlayerHand[i].val === \"A\") {\n        currentPlayer += 11;\n        playerAceCount++;\n      } else {\n        currentPlayer += parseInt(sampPlayerHand[i].val);\n      }\n    }\n\n    if (this.state.splitSelected) {\n      let sampPlayerHandTwo = [...this.state.secondPlayerHand];\n      for (var i = 0; i < sampPlayerHandTwo.length; i++) {\n        if (\n          sampPlayerHandTwo[i].val === \"J\" ||\n          sampPlayerHandTwo[i].val === \"Q\" ||\n          sampPlayerHandTwo[i].val === \"K\"\n        ) {\n          currentPlayerTwo += 10;\n        } else if (sampPlayerHandTwo[i].val === \"A\") {\n          currentPlayerTwo += 11;\n          playerAceCountTwo++;\n        } else {\n          currentPlayerTwo += parseInt(sampPlayerHandTwo[i].val);\n        }\n      }\n    }\n\n    if (currentDealer > 21 && dealerAceCount > 0) {\n      while (dealerAceCount > 0 && currentDealer > 21) {\n        currentDealer -= 10;\n        dealerAceCount--;\n      }\n    }\n\n    if (currentPlayer > 21 && playerAceCount > 0) {\n      while (playerAceCount > 0 && currentPlayer > 21) {\n        currentPlayer -= 10;\n        playerAceCount--;\n      }\n    }\n\n    if (currentPlayerTwo > 21 && playerAceCountTwo > 0) {\n      while (playerAceCountTwo > 0 && currentPlayerTwo > 21) {\n        currentPlayerTwo -= 10;\n        playerAceCountTwo--;\n      }\n    }\n    // const d = this.dealerTurn(currentDealer);\n\n    console.log(\"current player score:\" + currentPlayer);\n    console.log(\"current dealer score:\" + currentDealer);\n    console.log(\"current Split hand score\" + currentPlayerTwo);\n    this.setState({\n      playerPoints: currentPlayer,\n      dealerPoints: currentDealer,\n      secPlayerPoints: currentPlayerTwo\n    });\n\n    if (\n      this.state.dealerPoints === 21 &&\n      this.state.dealerHand.length === 2 &&\n      this.state.playerHand < 21\n    ) {\n      this.roundOver();\n    }\n\n    if (this.state.dealerStand) {\n      // const final = this.roundOver(\n      //   this.state.playerPoints,\n      //   this.state.dealerPoints\n      // );\n      this.roundOver();\n    }\n\n    if (this.state.playerPoints > 21) {\n      this.roundOver(this.state.playerPoints, this.state.dealerPoints);\n    }\n    // console.log(\"dealer hand \" + this.state.dealerHand[0]);\n    // console.log(\"dealer hand \" + this.state.dealerHand[1]);\n    // console.log(\"player hand \" + this.state.playerHand[0]);\n    // console.log(\"player hand \" + this.state.playerHand[1]);\n    // console.log(\"current shuffle \" + this.state.currentShuffle);\n    // console.log(\"first hand dealer \" + this.state.firstHandDealer[0]);\n  };\n\n  //Check to see if there is an option to split\n  splitCheck = () => {\n    if (!this.state.splitSelected) {\n      if (this.state.playerHand[0].val === this.state.playerHand[1].val) {\n        this.setState({\n          showSplit: true\n        });\n      }\n    }\n  };\n\n  // draw a card\n  playerHit = () => {\n    console.log(\"player hit!\");\n    if (this.state.splitSelected && this.state.secHandStand === false) {\n      let splitCurrent = [\n        ...this.state.secondPlayerHand,\n        this.state.currentShuffle[0]\n      ];\n      this.setState({\n        secondPlayerHand: splitCurrent\n      });\n    } else {\n      let current = [...this.state.playerHand, this.state.currentShuffle[0]];\n      this.setState({\n        playerHand: current\n      });\n    }\n\n    // let current = [...this.state.playerHand, this.state.currentShuffle[0]];\n    let adjusted = [...this.state.currentShuffle].slice(1);\n\n    this.setState({\n      currentShuffle: adjusted\n    });\n\n    setTimeout(() => {\n      this.scoreCheck();\n    }, 1000);\n  };\n\n  dealerHit = () => {\n    console.log(\"dealer hit\");\n    let current = [...this.state.dealerHand, this.state.currentShuffle[0]];\n    let adjusted = [...this.state.currentShuffle].slice(1);\n\n    this.setState({\n      dealerHand: current,\n      currentShuffle: adjusted\n    });\n\n    setTimeout(() => {\n      this.scoreCheck();\n    }, 1000);\n\n    setTimeout(() => {\n      this.dealerTurn();\n    }, 1500);\n  };\n\n  dealerTurn = () => {\n    this.scoreCheck();\n    console.log(\"its the dealers turn\");\n    // console.log(\"variable d: \" + d);\n    if (this.state.dealerPoints < 17) {\n      this.dealerHit();\n      //soft 17\n    } else if (this.state.dealerPoints >= 17) {\n      this.dealerStayed();\n    }\n    //  else if (this.state.dealerPoints === 17 && dealerAceCount > 0) {\n    //   this.dealerHit();\n    // }\n  };\n\n  dealerStayed = () => {\n    console.log(\"dealer stayed!\");\n    this.setState({\n      dealerStand: true\n    });\n    setTimeout(() => {\n      this.scoreCheck();\n    }, 1500);\n  };\n\n  playerStand = () => {\n    console.log(\"player Stood!\");\n    let newDealer = [];\n    newDealer.push(this.state.dealerHand[0]);\n    newDealer.push(this.state.firstHandDealer[0]);\n    this.setState({\n      firstDeal: true,\n      dealerHand: newDealer,\n      dealerTurn: true\n    });\n\n    setTimeout(() => {\n      this.dealerTurn();\n    }, 1500);\n  };\n\n  secPlayerStand = () => {\n    //still need to hide buttons after stand\n    console.log(\"split hand stayed\");\n    this.setState({\n      secHandStand: true,\n      firstDeal: false\n    });\n  };\n\n  //Need to take away ability to double and ability to split after 3rd card\n  playerDouble = () => {\n    console.log(\"player Doubled!\");\n    let doubled = this.state.currentBet * 2;\n    let adjusted = this.state.chipStack - this.state.betInPlay;\n    this.playerHit();\n\n    this.setState({\n      betInPlay: doubled,\n      chipStack: adjusted,\n      firstDeal: true\n    });\n    this.scoreCheck();\n    setTimeout(() => {\n      this.playerStand();\n    }, 1500);\n  };\n\n  playerSplit = () => {\n    console.log(\"Player Split\");\n    let first = [];\n    let second = [];\n    first.push(this.state.playerHand[0]);\n    second.push(this.state.playerHand.pop());\n    let updatedBet = this.state.betInPlay * 2;\n    let updatedChips = this.state.chipStack - this.state.currentBet;\n    this.setState({\n      splitSelected: true,\n      showSplit: false,\n      firstDeal: true,\n      playerHand: first,\n      secondPlayerHand: second,\n      betInPlay: updatedBet,\n      chipStack: updatedChips\n    });\n  };\n\n  standUpFromTable = () => {\n    alert(\"player stood up!\");\n    var token = localStorage.getItem(\"x-auth-token\");\n    var decoded = decode(token);\n    var id = decoded.user.id;\n    const finalChips =\n      parseInt(this.state.chipsAfterWithdrawal) +\n      parseInt(this.state.chipStack);\n    console.log(finalChips);\n    API.updatedChips({ id, finalChips }).then(res => {\n      // updated info used here.\n      console.log(res);\n    });\n    localStorage.removeItem(\"funds\");\n    this.setState({\n      hideBetDiv: true,\n      isSit: false,\n      showStandUp: false\n    });\n  };\n\n  playerWin = () => {\n    alert(\"player Win ran\");\n    let updated = 0;\n    let playerTwo = this.state.secPlayerPoints;\n    let dealer = this.state.dealerPoints;\n    let selected = this.state.splitSelected;\n    if (selected && playerTwo > dealer) {\n      updated = this.state.betInPlay * 2 + this.state.chipStack;\n    } else if (selected && playerTwo < dealer) {\n      updated = parseInt(this.state.betInPlay) + parseInt(this.state.chipStack);\n    } else if (selected && playerTwo === dealer) {\n      updated = this.state.betInPlay * 1.5;\n    }\n    if (!selected) {\n      updated = this.state.betInPlay * 2 + this.state.chipStack;\n    }\n\n    this.setState({\n      chipStack: updated\n    });\n    this.resetGame();\n  };\n\n  playerLose = () => {\n    alert(\"player Lose ran\");\n    if (\n      this.state.splitSelected &&\n      this.state.secPlayerPoints > this.state.dealerPoints\n    ) {\n      let updated =\n        parseInt(this.state.betInPlay) + parseInt(this.state.chipStack);\n      this.setState({\n        chipStack: updated\n      });\n    } else if (\n      this.state.splitSelected &&\n      this.state.secPlayerPoints === this.state.dealerPoints\n    ) {\n      let updated =\n        parseInt(this.state.betInPlay) / 2 + parseInt(this.state.chipStack);\n      this.setState({\n        chipStack: updated\n      });\n    }\n    this.resetGame();\n  };\n\n  playerPush = () => {\n    alert(\"player push ran\");\n    if (\n      this.state.splitSelected &&\n      this.state.secPlayerPoints > this.state.dealerPoints\n    ) {\n      let updated =\n        parseInt(this.state.betInPlay) * 1.5 + parseInt(this.state.chipStack);\n      this.setState({\n        chipStack: updated\n      });\n    } else {\n      var updated =\n        parseInt(this.state.betInPlay) + parseInt(this.state.chipStack);\n      this.setState({\n        chipStack: updated\n      });\n    }\n    // need to check all push scenarios\n    this.resetGame();\n  };\n\n  resetGame = () => {\n    if (this.state.currentShuffle.length < 10) {\n      this.shuffle();\n    } else {\n      this.setState({\n        dealerHand: [],\n        playerHand: [],\n        secondPlayerHand: [],\n        dealerPoints: null,\n        playerPoints: null,\n        secPlayerPoints: null,\n        secHandStand: false,\n        currentBet: \"\",\n        betInPlay: 0,\n        hideBetDiv: false,\n        showSplit: false,\n        splitSelected: false,\n        firstDeal: true,\n        dealerTurn: false,\n        dealerStand: false,\n        isDealt: false,\n        showStandUp: true\n      });\n    }\n  };\n\n  roundOver = () => {\n    console.log(\"rounderOver Ran\");\n    if (this.state.playerPoints > 21) {\n      alert(\"You Lost\");\n      this.playerLose();\n    } else if (this.state.dealerPoints > 21 && this.state.playerPoints <= 21) {\n      alert(\"you win!\");\n      this.playerWin();\n    } else if (this.state.dealerPoints > this.state.playerPoints) {\n      alert(\"you lost!\");\n      this.playerLose();\n    } else if (this.state.playerPoints > this.state.dealerPoints) {\n      alert(\"you win\");\n      this.playerWin();\n    } else if (this.state.playerPoints === this.state.dealerPoints) {\n      alert(\"PUSH\");\n      this.playerPush();\n    }\n  };\n\n  render() {\n    const toggleSit =\n      localStorage.getItem(\"funds\") && this.state.isSit === false\n        ? {}\n        : { visibility: \"hidden\" };\n    const nameTag =\n      localStorage.getItem(\"funds\") && this.state.isSit === true\n        ? {}\n        : { visibility: \"hidden\" };\n\n    const toggleBuy = localStorage.getItem(\"funds\")\n      ? { visibility: \"hidden\" }\n      : {};\n    const betDivStyle = this.state.hideBetDiv ? { visibility: \"hidden\" } : {};\n    const splitButtStyle = this.state.showSplit ? {} : { visibility: \"hidden\" };\n    const splitDivStyle = this.state.splitSelected\n      ? {}\n      : { visibility: \"hidden\" };\n    const secButtHide = this.state.secHandStand ? { visibility: \"hidden\" } : {};\n    const hitButtonAvail = this.state.firstDeal ? { visibility: \"hidden\" } : {};\n    const standUpStyle = this.state.showStandUp ? {} : { visibility: \"hidden\" };\n    const thatHiddenCard =\n      this.state.dealerTurn || this.state.isDealt === false\n        ? { visibility: \"hidden\" }\n        : {};\n    return (\n      <>\n        <div className=\"container-fluid\">\n          <div className=\"background-img-table\">\n            <div className=\"row\">\n              <div className=\"col-md-1\"></div>\n              <div className=\"col-md-10\">\n                <div className=\"table-visual\">\n                  <div>\n                    <img className=\"table-img\" src={spades} />\n                  </div>\n                  <div className=\"dealerPos\">\n                    <div>\n                      {this.state.dealerHand.map((card, i) => {\n                        return <Card key={i} val={card.val} suit={card.suit} />;\n                      })}\n                    </div>\n\n                    <div className=\"hideCard\" style={thatHiddenCard}>\n                      <img src={hiddenCard} />\n                    </div>\n                  </div>\n                  <div className=\"posOne\">\n                    <Button\n                      style={hitButtonAvail}\n                      bsclass=\"success\"\n                      className=\"hit-button\"\n                      onClick={this.playerHit}\n                    >\n                      Hit\n                    </Button>\n                    <Button\n                      style={hitButtonAvail}\n                      bsclass=\"success\"\n                      className=\"stand-button\"\n                      onClick={this.playerStand}\n                    >\n                      Stand\n                    </Button>\n                    <Button\n                      style={hitButtonAvail}\n                      bsclass=\"success\"\n                      className=\"double-button\"\n                      onClick={this.playerDouble}\n                    >\n                      Double\n                    </Button>\n                    <Button\n                      style={splitButtStyle}\n                      bsclass=\"success\"\n                      className=\"split-button\"\n                      onClick={this.playerSplit}\n                    >\n                      Split\n                    </Button>\n\n                    <Button\n                      style={standUpStyle}\n                      className=\"standUpButt\"\n                      onClick={this.standUpFromTable}\n                    >\n                      StandUp\n                    </Button>\n\n                    {/* Show information on Sitting Player */}\n                    <div className=\"playerInfo\" style={nameTag}>\n                      <div className=\"sitAvatar\"></div>\n                      <div className=\"playerName\">\n                        {this.state.currentPlayerName}\n                      </div>\n                      <div className=\"chipCount\">{this.state.chipStack}</div>\n                    </div>\n                    <div>\n                      {this.state.playerHand.map((card, i) => {\n                        return <Card key={i} val={card.val} suit={card.suit} />;\n                      })}\n                    </div>\n                    <div className=\"betOne betDiv\">\n                      {this.state.betInPlay > 0 ? (\n                        <div className=\"bet-spot\">\n                          <img src={chips} />\n                        </div>\n                      ) : (\n                        <></>\n                      )}\n                    </div>\n                    {/* <Button bsclass=\"success\" onClick={() => this.placeBet()}>\n                    Place Bet\n                  </Button> */}\n                    <div id=\"bet-div\" style={betDivStyle}>\n                      <form>\n                        <input\n                          className=\"bet-input\"\n                          type=\"text\"\n                          name=\"currentBet\"\n                          placeholder=\"\"\n                          value={this.state.currentBet}\n                          onChange={this.handleInputChange}\n                          onSubmit={this.handleSubmit}\n                        />\n                        <button onClick={this.handleSubmit}>BET</button>\n                      </form>\n                    </div>\n                    {/* () => this.shuffle() */}\n                    <ModalProvider>\n                      <ModalRoot />\n                      <ModalConsumer>\n                        {({ showModal }) => (\n                          <Fragment>\n                            <button\n                              className=\"buyButt\"\n                              style={toggleBuy}\n                              // style={}\n                              onClick={() => {\n                                showModal(widModal);\n                              }}\n                            >\n                              <span>Buy In</span>\n                            </button>\n                          </Fragment>\n                        )}\n                      </ModalConsumer>\n                    </ModalProvider>\n                    <div className=\"sitButt\">\n                      <Button\n                        bsclass=\"success\"\n                        style={toggleSit}\n                        onClick={this.takeSeat}\n                      >\n                        Take Seat!\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"posTwo\" style={splitDivStyle}>\n                    <Button\n                      style={secButtHide}\n                      bsclass=\"success\"\n                      className=\"hit-button\"\n                      onClick={this.playerHit}\n                    >\n                      Hit\n                    </Button>\n                    <Button\n                      style={secButtHide}\n                      bsclass=\"success\"\n                      className=\"stand-button\"\n                      onClick={this.secPlayerStand}\n                    >\n                      Stand\n                    </Button>\n                    <Button\n                      style={secButtHide}\n                      bsclass=\"success\"\n                      className=\"double-button\"\n                      onClick={this.playerDouble}\n                    >\n                      Double\n                    </Button>\n                    <div>\n                      {this.state.secondPlayerHand.map((card, i) => {\n                        return <Card key={i} val={card.val} suit={card.suit} />;\n                      })}\n                    </div>\n                    <div className=\"betTwo betDiv\">\n                      {this.state.splitSelected ? (\n                        <div className=\"bet-spot\">\n                          <img src={chips} />\n                        </div>\n                      ) : (\n                        <></>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-1\"></div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst Card = ({ val, suit }) => {\n  const combo = val ? `${val}${suit}` : null;\n  const color = suit === \"♦\" || suit === \"♥\" ? \"card-red\" : \"card\";\n\n  return (\n    <td>\n      <div className={color}>{combo}</div>\n    </td>\n  );\n};\n\nconst theHiddenCard = () => {\n  return (\n    <div className=\"hideCard\">\n      <img src={hiddenCard} />\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { Component, Fragment } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport API from \"../../utils/API\";\nimport decode from \"jwt-decode\";\nimport \"./style.css\";\n\nclass Profile extends Component {\n  state = {\n    profileInfo: null\n  };\n\n  getUserInfo = id => {\n    API.checkAvailChips(id)\n      .then(res => {\n        this.setState({ profileInfo: res.data.filter(dat => dat._id === id) });\n        console.log(this.state.profileInfo[0]);\n      })\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount() {\n    var token = localStorage.getItem(\"x-auth-token\");\n    var decoded = decode(token);\n    var id = decoded.user.id;\n    this.getUserInfo(id);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Container>\n          <Row>\n            <Col md={12}>\n              <div className=\"profile-header\">My Profile</div>\n            </Col>\n          </Row>\n          {this.state.profileInfo !== null &&\n          this.state.profileInfo !== undefined &&\n          this.state.profileInfo.length !== 0 ? (\n            <Row>\n              <Col md={{ span: 8, offset: 2 }}>\n                <div className=\"profile-content\">\n                  <div className=\"profile-pic\">\n                    <img src={this.state.profileInfo[0].avatar} />\n                  </div>\n\n                  <div className=\"profile-item-title\">\n                    User Name:\n                    <span className=\"profile-item\">\n                      {this.state.profileInfo[0].name}\n                    </span>\n                  </div>\n                  <div className=\"profile-item-title\">\n                    Email Address:\n                    <span className=\"profile-item\">\n                      {this.state.profileInfo[0].email}\n                    </span>\n                  </div>\n                  <div className=\"profile-item-title\">\n                    Total Chips:\n                    <span className=\"profile-item\">\n                      {this.state.profileInfo[0].chips}\n                    </span>\n                  </div>\n                  {/* <div className=\"profile-item-title\">\n                    About Me:\n                    <span className=\"profile-item\">\n                      {this.state.profileInfo[0].chips}\n                    </span>\n                  </div> */}\n                </div>\n              </Col>\n            </Row>\n          ) : (\n            <Fragment>\n              <h1>Loading</h1>\n            </Fragment>\n          )}\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Fragment } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Landing from \"./components/Landing/landing\";\nimport Register from \"./components/Register/index\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Table from \"./components/Table/index\";\nimport Profile from \"./components/Profile/index\";\n\nimport { Button } from \"react-bootstrap\";\nimport decode from \"jwt-decode\";\n\nimport \"./App.css\";\n\nconst checkAuth = () => {\n  const token = localStorage.getItem(\"x-auth-token\");\n  if (!token) {\n    return false;\n  }\n\n  try {\n    //get expiration time and user id from token\n    const { exp } = decode(token);\n    if (exp < Date.now() / 1000) {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n};\n\nconst AuthRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      checkAuth() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: \"/\" }} />\n      )\n    }\n  />\n);\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Fragment>\n        <section className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            {/* <Route exact path=\"/register\" component={Register} /> */}\n            <AuthRoute exact path=\"/table\" component={Table} />\n            <AuthRoute exact path=\"/profile\" component={Profile} />\n          </Switch>\n        </section>\n      </Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Bootstrap from \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}